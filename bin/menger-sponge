#!/usr/bin/env python3
"""
just create a menger sponge as a tif imagestack w these params
- 729 x 729 x 729
- 6 iterations
- Solid: 255
- Pore: 0
"""
import os
import sys

from PIL import Image  # pylint: disable=import-error

from py_petrographic_ca.menger_sponge import generate_menger

USAGE = 'poetry run ./menger-sponge <iters:int in [1,6]> <outdir:str>)'


def main(iterations: int, file_path: str, file_prefix: str) -> None:
    # since we've frozen the number of iterations
    # we can just define a fn like m(x,y,z)
    # whose interior does a query foreach pixel
    # break on the first iteration that's a void, so bool-and or just multiply

    os.makedirs(file_path, exist_ok=True)
    diameter = 3**iterations
    file_index_digits = len(str(diameter))

    for z, Y in enumerate(generate_menger(iterations)):
        file_index = format(z, f"0{file_index_digits}d")
        Image.fromarray(Y).save(f'{file_path}/{file_prefix}{file_index}.tif')


if __name__ == '__main__':
    try:
        arg_iters = int(sys.argv[1])
        arg_file_path = sys.argv[2]
    except (IndexError, ValueError):
        sys.exit(USAGE)

    if arg_iters < 1 or arg_iters > 6:
        sys.exit(USAGE)

    main(arg_iters, arg_file_path, 'slice_')
